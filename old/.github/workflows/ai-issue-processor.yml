name: AI Issue Processor

on:
  issues:
    types: [opened, labeled]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to process'
        required: true
        type: number

jobs:
  process-issue:
    name: Process Issue with AI
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'issues' && 
       !contains(github.event.issue.labels.*.name, 'no-ai')) ||
      (github.event_name == 'issue_comment' && 
       github.event.issue && 
       startsWith(github.event.comment.body, '/ai')) ||
      github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      
      - name: Get issue number
        id: get-issue
        run: |
          if [[ "${{ github.event_name }}" == "issues" ]]; then
            echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
          else
            echo "ISSUE_NUMBER=${{ github.event.inputs.issue_number }}" >> $GITHUB_ENV
          fi
      
      - name: Add AI processing label
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = process.env.ISSUE_NUMBER;
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              labels: ['ai-processing']
            });
      
      - name: Process issue with AI
        id: ai-process
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python .github/scripts/ai_processor.py \
            --issue-number $ISSUE_NUMBER \
            --repo ${{ github.repository }} \
            --token ${{ secrets.GITHUB_TOKEN }} \
            --mode issue
      
      - name: Comment on issue
        if: steps.ai-process.outputs.response
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = process.env.ISSUE_NUMBER;
            const response = `${{ steps.ai-process.outputs.response }}`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: response
            });
      
      - name: Create branch for fixes
        id: create-branch
        run: |
          BRANCH_NAME="ai-fix-issue-$ISSUE_NUMBER"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
      
      - name: Apply AI-suggested fixes
        id: apply-fixes
        env:
          ANALYSIS: ${{ steps.ai-process.outputs.analysis }}
        run: |
          # In a real implementation, this would parse the AI analysis
          # and apply the suggested fixes to the codebase
          
          # For this example, we'll create a placeholder commit
          touch ai-fix-placeholder.md
          echo "# AI Fix for Issue #$ISSUE_NUMBER" > ai-fix-placeholder.md
          echo "This is a placeholder for actual code changes" >> ai-fix-placeholder.md
          
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add .
          git commit -m "AI-suggested fix for issue #$ISSUE_NUMBER"
      
      - name: Push changes
        run: |
          git push origin $BRANCH_NAME
      
      - name: Create pull request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = process.env.ISSUE_NUMBER;
            const branchName = process.env.BRANCH_NAME;
            
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `[AI Fix] Resolution for issue #${issueNumber}`,
              body: `This PR contains AI-suggested fixes for issue #${issueNumber}.\n\nPlease review the changes and merge if appropriate.`,
              head: branchName,
              base: 'main'
            });
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `I've created PR #${pr.data.number} with proposed fixes. Please review.`
            });
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.data.number,
              labels: ['ai-fix', 'automated']
            });
      
      - name: Remove processing label
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = process.env.ISSUE_NUMBER;
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                name: 'ai-processing'
              });
            } catch (error) {
              console.log('Error removing label:', error);
            }